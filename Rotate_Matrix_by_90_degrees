Time Complexity : O(N^2)
Space Complexity : O(N^2)

#include<iostream>
using namespace std;
#include<vector>

int main()
{
  int n;
  cout<<"Enter size of matrix ";
  cin>>n;
  vector<vector<int>> matrix(n,vector<int>(n));
  vector<vector<int>> ans(n,vector<int>(n));
  cout<<"Enter elements into matrix ";
  for(int i=0;i<n;i++)
    {
    for(int j=0;j<n;j++)
        {
          cin>>matrix[i][j];
          }
        }
        for(int i=0;i<n;i++)
          {
          for(int j=0;j<n;j++)
            {
            ans[j][n-1-i]=matrix[i][j];
            }
          }
   for(int i=0;i<n;i++)
    {
    for(int j=0;j<n;j++)
        {
          cout<<ans[i][j] <<" ";
          }
          cout<<endl;
    }
        }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Time Complexity :  O(N^2)
Space Complexity : O(1)

#include<iostream>
using namespace std;
#include<vector>
#include<algorithm>

int main()
{
  int n;
  cout<<"Enter size of matrix ";
  cin>>n;
  vector<vector<int>> matrix(n,vector<int>(n));
  cout<<"Enter elements into matrix ";
  for(int i=0;i<n;i++)
    {
    for(int j=0;j<n;j++)
      {
      cin>>matrix[i][j];
      }
    }
  for(int i=0;i<n-1;i++)
    {
    for(int j=i+1;j<n;j++)
      {
      swap(matrix[i][j],matrix[j][i]);
      }
    }
  for(int i=0;i<n;i++)
    {
    reverse(matrix[i].begin(),matrix[i].end());
    }
    for(int i=0;i<n;i++)
    {
    for(int j=0;j<n;j++)
      {
      cout<<matrix[i][j]<<" ";
      }
      cout<<endl;
    }
    
  }

  
  
        
