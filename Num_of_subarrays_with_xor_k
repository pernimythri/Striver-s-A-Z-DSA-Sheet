Time Complexity : O(N^2)
Space Complexity : O(1)

#include<iostream>
using namespace std;
#include<vector>

int Num_of_Subarrays_with_Xor_K(vector<int>arr,int n,int k)
{
    int xr,count=0;
    for(int i=0;i<n;i++)
    {
        xr=0;
        for(int j=i;j<n;j++)
        {
            xr^=arr[j];
            if(xr==k)
            count+=1;
        }
    }
    return count;
}

int main()
{
    int n;
    cin>>n;
    vector<int>arr(n);
    for(int i=0;i<n;i++)
    {
        cin >>arr[i];
    }
    int k;
    cin>>k;
    cout<<Num_of_Subarrays_with_Xor_K(arr,n,k);
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Time Complexity : O(N * log N)
Space Complexity : O(N)

#include<iostream>
using namespace std;
#include<vector>
#include<map>

int Num_of_Subarrays_with_Xor_K(vector<int>arr,int n,int k)
{
    int xr=0,count=0;
    map<int,int>mpp;
    mpp[xr]++;
    for(int i=0;i<n;i++)
    {
        xr=xr^arr[i];
        int x=xr^k;
        count+=mpp[x];
        mpp[xr]++;
    }
    
    return count;
}

int main()
{
    int n;
    cin>>n;
    vector<int>arr(n);
    for(int i=0;i<n;i++)
    {
        cin >>arr[i];
    }
    int k;
    cin>>k;
    cout<<Num_of_Subarrays_with_Xor_K(arr,n,k);
}
